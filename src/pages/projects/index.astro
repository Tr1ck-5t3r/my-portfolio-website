---
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import FormattedDate from "../../components/FormattedDate.astro";
import { Name, SITE_DESCRIPTION as desc, img } from "../../consts";
import { getCollection } from "astro:content";

const posts = (await getCollection("projects")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
import "../../styles/global.css";
const url = "https://tarun-rg.in/projects/";
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Metadata -->
    <meta charset="utf-8" />
    <link rel="preload" as="image" href="/tarun.webp" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Jura:wght@300..700&family=Montserrat:ital,wght@0,100..900;1,100..900&family=Raleway:ital,wght@0,100..900;1,100..900&family=Syncopate:wght@400;700&display=swap"
      rel="stylesheet"
    />

    <!-- Canonical URL -->
    <link rel="canonical" href={url} />

    <!-- Primary Meta Tags -->
    <title>{Name}</title>
    <meta name="title" content={Name} />
    <meta name="description" content={desc} />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:title" content={Name} />
    <meta property="og:site_name" content="Tarun R G's projects" />
    <meta property="og:description" content={desc} />
    <meta property="og:image" content={img} />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={url} />
    <meta property="twitter:title" content={Name} />
    <meta property="twitter:description" content={desc} />
    <meta property="twitter:image" content={img} />
    <style>
      .projects {
        padding: 1rem 1rem;
        background-color: var(--bg-color);
      }
      .projects-container {
        width: 85%;
        margin: 0 auto;
        text-align: center;
      }
      .section-title {
        font-size: 1.5rem;
        margin-bottom: 1.5rem;
        font-weight: 600;
        color: var(--text-color);
      }
      .projects-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(320px, 1fr));
        gap: 3.5rem;
        justify-content: center;
        width: 100%;
      }
      .project-card {
        background-color: var(--bg-secondary, var(--bg-muted));
        border-radius: 10px;
        font-family: "Raleway", sans-serif;
        /* Subtle border, color variable needed */
        border: 1px solid var(--border-color, transparent);
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.05);
        overflow: hidden;
        display: flex;
        flex-direction: column;
        text-align: left;
        /* Specific transitions */
        transition:
          transform 0.3s ease,
          box-shadow 0.3s ease,
          border-color 0.3s ease;
        transform: translateY(20px);
      }
      .project-card:hover {
        transform: translateY(-5px) scale(1.01);
        box-shadow: 0 10px 25px rgba(0, 0, 0, 0.08);
        /* Accent border on hover, needs --clr-accent or similar */
        border-color: var(--clr-accent, var(--text-color));
      }

      /* --- Project Image & Overlay --- */
      .project-header {
        position: relative; /* Context for overlay */
        /* Placeholder background color if image fails */
        background-color: var(--bg-muted);
        line-height: 0; /* Remove potential space below img */
      }

      .project-image-link {
        display: block; /* Make link fill header */
        position: relative; /* Context for overlay */
        outline: none; /* Remove default outline */
      }

      .project-image {
        display: block;
        height: 220px;
        width: 100%;
        object-fit: cover;
        /* Image stays, overlay/border show interaction */
        transition: opacity 0.3s ease; /* Fade slightly under overlay? Optional */
        border-bottom: 1px solid var(--border-color, transparent); /* Line below image */
      }

      .project-image-overlay {
        position: absolute;
        inset: 0; /* Cover the entire link area */
        background-color: rgba(0, 0, 0, 0); /* Start transparent */
        display: flex;
        align-items: center;
        justify-content: center;
        opacity: 0; /* Hidden by default */
        transition:
          background-color 0.3s ease,
          opacity 0.3s ease;
        pointer-events: none; /* Allow clicks to go to the link */
      }
      
      .project-card:hover .project-image-overlay{
        opacity: 1;
        background-color: rgba(15, 15, 15, 0.697);
      }

      .overlay-icon {
        color: white;
        opacity: 0.8;
        transform: scale(0.8);
        transition:
          transform 0.3s ease,
          opacity 0.3s ease;
      }

      /* Show overlay on hover/focus-visible of the LINK */
      .project-image-link:hover .project-image-overlay,
      .project-image-link:focus-visible .project-image-overlay {
        background-color: rgba(0, 0, 0, 0.5); /* Darken */
        opacity: 1;
      }

      .project-image-link:hover .overlay-icon,
      .project-image-link:focus-visible .overlay-icon {
        transform: scale(1);
        opacity: 1;
      }
      /* Optional: Slightly fade image when overlay is active */
      .project-image-link:hover .project-image,
      .project-image-link:focus-visible .project-image {
        opacity: 0.85;
      }
      .project-image-link:focus-visible {
        box-shadow: 0 0 0 3px var(--clr-focus-ring, var(--clr-accent, #4a90e2)); /* Example focus ring */
      }

      /* --- Project Body --- */
      .project-body {
        padding: 1.5rem;
        flex-grow: 1;
        display: flex;
        flex-direction: column;
      }

      .project-title {
        font-size: 1.3rem;
        font-weight: 600;
        color: var(--text-color);
        margin: 0 0 0.75rem 0;
        line-height: 1.3;
      }
      /* Style title link */
      .project-title a {
        color: inherit; /* Use card text color */
        text-decoration: none;
        transition: color 0.2s ease;
        outline: none;
      }
      .project-title a:hover,
      .project-title a:focus-visible {
        color: var(--clr-accent, var(--clr-2)); /* Highlight color */
        text-decoration: underline;
        text-decoration-thickness: 1.5px;
      }
      .project-title a:focus-visible {
        border-radius: 2px; /* Apply focus ring to link */
        box-shadow: 0 0 0 2px var(--clr-focus-ring, var(--clr-accent, #4a90e2));
      }

      .project-description {
        font-size: 0.95rem;
        color: var(--text-light);
        line-height: 1.6;
        margin: 0;
        flex-grow: 1;
        opacity: 0.9; /* Slightly less emphasis */
      }

      @media (max-width: 768px) {
        .projects {
          padding: 4rem 1rem;
        }
        .section-title {
          font-size: 2rem;
          margin-bottom: 3rem;
        }
        .projects-grid {
          grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
          gap: 1.5rem;
        }
        .project-image {
          height: 180px;
        }
        .project-title {
          font-size: 1.2rem;
        }
        .project-description {
          font-size: 0.9rem;
          opacity: 1;
        } /* Restore opacity for mobile maybe */
        .btn.project-btn {
          padding: 0.5rem 1rem;
          font-size: 0.85rem;
        }
        .btn.view-more-btn {
          padding: 0.7rem 1.5rem;
          font-size: 0.95rem;
        }
      }
      @media (max-width: 480px) {
        .projects-grid {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </head>
  <body>
    <Header />
    <main>
      <section id="projects" class="projects">
        <div class="projects-container">
          <h3 class="section-title">Check out my Projects ðŸ’»</h3>
          <div class="projects-grid">
            {
              posts.map((post) => (
                <a href={`/projects/${post.id}/`} class="project-card">
                  <div class="project-header">
                    <img
                      src={post.data.heroImage}
                      alt={post.data.title}
                      class="project-image"
                    />
                    <div class="project-image-overlay">
                      <svg
                        class="overlay-icon"
                        xmlns="http://www.w3.org/2000/svg"
                        viewBox="0 0 24 24"
                        fill="currentColor"
                        width="32"
                        height="32"
                      >
                        <path d="M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z" />
                      </svg>
                    </div>
                  </div>
                  <div class="project-body">
                    <h3>{post.data.title}</h3>
                    <p>{post.data.description}</p>
                    <p class="date">
                      <FormattedDate date={post.data.pubDate} />
                    </p>
                  </div>
                </a>
              ))
            }
          </div>
        </div>
      </section>
    </main>
  </body>
  <Footer />
</html>
